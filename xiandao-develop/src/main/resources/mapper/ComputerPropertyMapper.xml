<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cnic.xiandao.mapper.ComputerPropertyMapper">
  <resultMap id="BaseResultMap" type="cn.cnic.xiandao.model.ComputerProperty">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="mac" jdbcType="VARCHAR" property="mac" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ip, mac, state, role, role_name, phone, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from computer_property
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from computer_property
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.cnic.xiandao.model.ComputerProperty">
    insert into computer_property (id, ip, mac, 
      state, role, role_name, 
      phone, createtime)
    values (#{id,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR}, #{mac,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{role,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.cnic.xiandao.model.ComputerProperty">
    insert into computer_property
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="mac != null">
        mac,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        #{mac,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cnic.xiandao.model.ComputerProperty">
    update computer_property
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="mac != null">
        mac = #{mac,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cnic.xiandao.model.ComputerProperty">
    update computer_property
    set ip = #{ip,jdbcType=VARCHAR},
      mac = #{mac,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      role = #{role,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>